@mixin MuseoSans($fontWeight) {
    src: url('../fonts/museosan/museosans-#{$fontWeight}-webfont.eot');
    src: url('../fonts/museosan/museosans-#{$fontWeight}-webfont.eot?#iefix') format("embedded-opentype"),
    url("../fonts/museosan/museosans-#{$fontWeight}-webfont.woff") format("woff"),
    url("../fonts/museosan/museosans-#{$fontWeight}-webfont.woff2") format("woff"),
    url("../fonts/museosan/museosans-#{$fontWeight}-webfont.ttf") format("truetype"),
    url("../fonts/museosan/museosans-#{$fontWeight}-webfont.svg") format("svg");
    @if ($fontWeight == 300) {
        font-weight: normal;
        font-style: normal;
    } @else {
        font-weight: $fontWeight;
        font-style: $fontWeight;
    }
}

@mixin transition($attr...) {
    -webkit-transition: $attr;
    -moz-transition: $attr;
    -o-transition: $attr;
    transition: $attr;
}

@mixin transform($attr...) {
    -webkit-transform: $attr;
    -moz-transform:    $attr;
    -ms-transform:     $attr;
    -o-transform:      $attr;
    transform:         $attr;
}

@mixin flexbox() {
    display: -webkit-box;
    display: -moz-box;
    display: -ms-flexbox;
    display: -webkit-flex;
    display: flex;
    @content;
}

@mixin inline-flexbox() {
    display: -webkit-box;
    display: -moz-box;
    display: -ms-flexbox;
    display: -webkit-inline-flex;
    display: inline-flex;
    @content;
}

@mixin flex($values: 0 1 auto) {
    -webkit-box-flex: $values;
    -moz-box-flex:  $values;
    -webkit-flex:  $values;
    -ms-flex:  $values;
    flex:  $values;
}

@mixin order($val) {
    -webkit-box-ordinal-group: $val;  
    -moz-box-ordinal-group: $val;     
    -ms-flex-order: $val;     
    -webkit-order: $val;  
    order: $val;
}

//http://mladenplavsic.github.io/css-ripple-effect @ modify by Hieu Tran
.ripple-effect {
    overflow: hidden;
    transform: translate3d(0, 0, 0);
    overflow: hidden;
    &:after {
        content: "";
        position: absolute;
        z-index: 1;
        width: 100%;
        height: 100%;
        top: 0;
        left: 0;
        pointer-events: none;
        background-image: radial-gradient(circle, #fff 10%, transparent 10.01%);
        background-repeat: no-repeat;
        background-position: 50%;
        transform: scale(10,10);
        opacity: 0;
        transition: transform .4s, opacity .8s;
    }
    &:active:not(:disabled) {
        &:after {
            transform: scale(0,0);
            opacity: .3;
            transition: 0s;
        }
    }
}

@mixin ht-btn($Bgcolor, $color, $boderRadis: 0px, $borderColor: null, $padding: 10px 16px, $borderWidth: 2px, $fontSize: 16px) {
    background-color: $Bgcolor;
    color: $color;
    @if ($borderColor) {
        border: $borderWidth solid $borderColor;
    } @else {
        border: $borderWidth solid $Bgcolor;
    }
    font-size: $fontSize;
    font-weight: 700;
    line-height: 1;
    padding: $padding;
    margin-bottom: 10px;
    position: relative;
    cursor: hand;
    cursor: pointer;
    border-radius: $boderRadis;
    min-width: 80px;
    @extend .ripple-effect;
    @content;
    &:hover {
        color: $color;
    }
    &:hover:not(:disabled) {
        background-color: darken($Bgcolor, 10) !important;
        color: $color !important;
        @if ($borderColor) {
            border-color: darken($borderColor, 10) !important;
        } @else {
            border-color: darken($Bgcolor, 10) !important;
        }
    }
    &:focus {
        color: $color;
    }
    &:active:not(:disabled) {
        background-color: darken($Bgcolor, 20) !important;
        @if ($borderColor) {
            border-color: darken($borderColor, 20) !important;
        } @else {
            border-color: darken($Bgcolor, 20) !important;
        }
        color: $color !important;
        box-shadow: unset;
    }
    &:disabled {
        opacity: .6;
    }
}

@keyframes btnEffect {
    from {background: radial-gradient(rgba($white, .3) 8%, transparent 8.01%)}
    to {background: radial-gradient(rgba($white, .3) 90%, transparent 90.01%)}
}

@mixin scrollbar($color: $deep-gray, $bgColor: $white-smoke, $barwidth: 6px, $borderRadius: 0, $hover2Display: null) {
    scrollbar-face-color: $color;
    scrollbar-shadow-color: $color;
    scrollbar-highlight-color: $color;
    scrollbar-3dlight-color: $color;
    scrollbar-darkshadow-color: rgba($color, .47);
    scrollbar-track-color: $bgColor;
    scrollbar-arrow-color: $color;
    -ms-overflow-style: -ms-autohiding-scrollbar;
    &::-webkit-scrollbar {
        width: $barwidth;
        background: $bgColor;
        @if ($hover2Display != null) {
            display: none;
        }
    }
    @if ($hover2Display != null) {
        &:hover {
            &::-webkit-scrollbar {
                display: inherit;
            }
        }
    }
    &::-webkit-scrollbar-button {
        // display: none;
        height: $barwidth;
        width: $barwidth;
        background-color: $color;
    }
    &::-webkit-scrollbar-track {
        background-color: $bgColor;
    }
    &::-webkit-scrollbar-track-piece {
        background-color: $bgColor;
    }
    &::-webkit-scrollbar-thumb {
        background-color: rgba($color: $color, $alpha: .87);
        border-radius: $borderRadius;
        -webkit-border-radius: $borderRadius;
    }
    &::-webkit-scrollbar-thumb:hover {
        background-color: rgba($color: $color, $alpha: 1);
        border-radius: $borderRadius;
        -webkit-border-radius: $borderRadius;
    }
    &::-webkit-scrollbar-corner {
        background-color: $color;
    }
    &::-webkit-resizer {
        background-color: $bgColor;
        color: $color;
    }
}

@mixin verticalCenter($position: relative) {
    position: $position;
    top: 50%;
    -webkit-transform: translateY(-50%);
    -ms-transform: translateY(-50%);
    transform: translateY(-50%);
}

@mixin xLarge() {
    @media (min-width: $breakdown-large) and (max-width: $breakdown-xlarge-down) {
        @content;
    }
}

@mixin large() {
    @media (min-width: $breakdown-medium) and (max-width: $breakdown-large-down) {
        @content;
    }
}

@mixin medium() {
    @media (min-width: $breakdown-small) and (max-width: $breakdown-medium-down) {
        @content;
    }
}

@mixin tablet(){
    @media (min-width: $breakdown-tablet) and (max-width: $breakdown-small-down) {
        @content;
    }
}

@mixin xMobile(){
    @media (min-width: $breakdown-mobile) and (max-width: $breakdown-tablet-down) {
        @content;
    }
}

@mixin mobile(){
    @media (max-width: $breakdown-mobile-down) {
        @content;
    }
}

@mixin keyframes($name) {
    @-webkit-keyframes #{$name} {
      @content; 
    }
    @-moz-keyframes #{$name} {
      @content;
    }
    @-ms-keyframes #{$name} {
      @content;
    }
    @keyframes #{$name} {
      @content;
    } 
}

@mixin roltateY($deg) {
    -webkit-transform: rotateY($deg);
    -moz-transform: rotateY($deg);
    transform: rotateY($deg);
}